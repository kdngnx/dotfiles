#!/usr/bin/env bash
set -e

function linking() {
  ln -sfn $(pwd)/.zshrc ~/.zshrc
  ln -sfn $(pwd)/.zshenv ~/.zshenv
  ln -sfn $(pwd)/.tmux.conf ~/.tmux.conf
  ln -sfn $(pwd)/.psqlrc ~/.psqlrc
  ln -sfn $(pwd)/.vimrc ~/.vimrc
  ln -sfn $(pwd)/.ideavimrc ~/.ideavimrc

  mkdir -p ${XDG_DATA_HOME:=~/.local/share}
  mkdir -p ${XDG_CONFIG_HOME:=~/.config}
  ln -sfn $(pwd)/alacritty $XDG_CONFIG_HOME/alacritty
  ln -sfn $(pwd)/nvim $XDG_CONFIG_HOME/nvim

  ln -sfn $(pwd)/.gitignore ~/.gitignore
  git config --global core.excludesFile '~/.gitignore'

  mkdir -p ~/.local/bin
  mkdir -p ~/personal
  mkdir -p ~/repos
  touch ~/.profile
}
echo '[-] linking dotfiles [-]'
linking

if [[ "$OSTYPE" == "darwin"* ]]; then
  if ! xcode-select -p &> /dev/null; then
    echo '[-] installing xcode command line tools [-]'
    xcode-select --install
  fi

  if ! hash brew &> /dev/null; then
    echo '[-] installing homebrew [-]'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    (echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
  fi

  echo '[-] installing essential packages [-]'
  brew update
  brew install curl wget git coreutils watch ncdu cmake ninja tree zig parallel tmux ripgrep jq
  brew install google-chrome alacritty orbstack maccy tree-sitter tldr font-hack
else
  echo '[-] installing essential packages [-]'
  sudo apt-get update && sudo apt-get upgrade -y
  sudo apt-get install -y curl wget zip zsh git coreutils gcc clang cmake make ninja-build
  sudo apt-get install -y alacritty parallel watch tree vim tmux ripgrep jq ncdu tldr

  echo '[-] downloading zig executable [-]'
  curl -s https://ziglang.org/download/index.json \
    | jq -r 'to_entries | map(select(.key != "master")) | max_by(.key | split(".") | map(tonumber)) | .value["x86_64-linux"].tarball' \
    | xargs wget
  tar -xf zig-x86_64-linux-*.tar.xz
  sudo mv zig-x86_64-linux-*/zig /usr/bin/zig
  if [ -d '/usr/lib/zig' ] ; then
    sudo rm -rf /usr/lib/zig
  fi
  sudo mkdir -p /usr/lib/zig
  sudo mv zig-x86_64-linux*/lib/* /usr/lib/zig/
  rm -rf zig-x86_64-linux-*

  target_dir=$XDG_DATA_HOME/fonts
  if [ ! -d "$target_dir" ] ; then
    echo '[-] installing favourite font [-]'
    wget https://github.com/source-foundry/Hack/releases/download/v3.003/Hack-v3.003-ttf.zip
    mkdir -p $target_dir
    unzip Hack-v3.003-ttf.zip -d $target_dir
    rm -f Hack-v3.003-ttf.zip
    fc-cache -f -v
  fi
fi

echo '[-] downloading git-prompt.sh script [-]'
mkdir -p ~/.zsh/plugins/git/
curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh \
  -o ~/.zsh/plugins/git/git-prompt.sh

target_dir=~/.zsh/zsh-autosuggestions
if [ ! -d "$target_dir" ] ; then
  echo '[-] cloning zsh-autosuggestions [-]'
  git clone https://github.com/zsh-users/zsh-autosuggestions $target_dir
fi

target_dir=$XDG_DATA_HOME/neovim
if [ ! -d "$target_dir" ] ; then
  echo '[-] building neovim [-]'
  git clone https://github.com/neovim/neovim.git $target_dir
  cd $target_dir
  git checkout nightly
  make CMAKE_BUILD_TYPE=RelWithDebInfo
  sudo make install
fi

current_shell=$(echo $SHELL)
if [ "$current_shell" != '/usr/bin/zsh' ] && [ "$current_shell" != '/bin/zsh' ]; then
  echo '[-] change default shell to zsh [-]'
  chsh -s $(which zsh)
  echo '[-] device ready, restart your computer. [-]'
else
  echo '[-] device ready. [-]'
fi

# vim: ft=bash
